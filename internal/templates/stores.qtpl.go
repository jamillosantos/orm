// Code generated by qtc from "stores.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line stores.qtpl:1
package templates

//line stores.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line stores.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line stores.qtpl:1
func StreamStores(qw422016 *qt422016.Writer, input *StoresInput) {
//line stores.qtpl:1
	qw422016.N().S(`
package `)
//line stores.qtpl:2
	qw422016.E().S(input.Package.Name)
//line stores.qtpl:2
	qw422016.N().S(`

import (
	"context"
	"github.com/setare/orm"

	"github.com/pkg/errors"
)

`)
//line stores.qtpl:11
	for _, record := range input.Records {
//line stores.qtpl:11
		qw422016.N().S(`type `)
//line stores.qtpl:12
		qw422016.E().S(record.Store.Type)
//line stores.qtpl:12
		qw422016.N().S(` struct {
	conn orm.DBProxy
}

func New`)
//line stores.qtpl:16
		qw422016.E().S(record.Store.Type)
//line stores.qtpl:16
		qw422016.N().S(`(conn orm.Connection) *`)
//line stores.qtpl:16
		qw422016.E().S(record.Store.Type)
//line stores.qtpl:16
		qw422016.N().S(` {
	return &`)
//line stores.qtpl:17
		qw422016.E().S(record.Store.Type)
//line stores.qtpl:17
		qw422016.N().S(`{
		conn,
	}
}

func (store *`)
//line stores.qtpl:22
		qw422016.E().S(record.Store.Type)
//line stores.qtpl:22
		qw422016.N().S(`) Insert(record *`)
//line stores.qtpl:22
		qw422016.E().S(record.Store.Type)
//line stores.qtpl:22
		qw422016.N().S(`, fields ...SchemaField) error {
	return store.InsertContext(context.Background(), record, fields...)
}

func (store *`)
//line stores.qtpl:26
		qw422016.E().S(record.Store.Type)
//line stores.qtpl:26
		qw422016.N().S(`) InsertContext(ctx context.Context, record *`)
//line stores.qtpl:26
		qw422016.E().S(record.Store.Type)
//line stores.qtpl:26
		qw422016.N().S(`, fields ...SchemaField) error {
	if len(fields) == 0 {
		fields = `)
//line stores.qtpl:28
		qw422016.E().S(record.Schema.InternalRef)
//line stores.qtpl:28
		qw422016.N().S(`Fields
	}
	columnNames := make([]string, len(fields))
	columnValues := make([]interface{}, len(fields))
	var err error
	for i, field := range fields {
		var fieldAddr interface{}
		`)
//line stores.qtpl:35
		StreamColumnAddresses(qw422016, &ColumnAddressesInput{
			FieldName:  "field.Name",
			TargetName: "fieldAddr",
			RecordName: "record",
			ErrName:    "err",
			Record:     record,
		})
//line stores.qtpl:41
		qw422016.N().S(`
		if err != nil {
			return err
		}
		columnNames[i] = field.String()
		columnValues[i] = fieldAddr
	}
	builder := conn.Builder().Insert(`)
//line stores.qtpl:48
		qw422016.E().S(record.Schema.InternalRef)
//line stores.qtpl:48
		qw422016.N().S(`.Table()).Columns(columnNames...).Values(columnValues...)`)
//line stores.qtpl:48
		if record.FieldAutoInc != nil {
//line stores.qtpl:48
			qw422016.N().S(`.Suffix("RETURNING `)
//line stores.qtpl:48
			qw422016.E().S(record.FieldAutoInc.Name)
//line stores.qtpl:48
			qw422016.N().S(`")`)
//line stores.qtpl:48
		}
//line stores.qtpl:48
		qw422016.N().S(`

	sql, args, err := builder.ToSql()
	if err != nil {
		return err
	}
`)
//line stores.qtpl:54
		if record.FieldAutoInc == nil {
//line stores.qtpl:54
			qw422016.N().S(`
	_, err := conn.ExecContext(ctx, sql, args...)
	return err
`)
//line stores.qtpl:57
		} else {
//line stores.qtpl:57
			qw422016.N().S(`
	var id `)
//line stores.qtpl:58
			qw422016.E().S(record.FieldAutoInc.Type)
//line stores.qtpl:58
			qw422016.N().S(`
	err := conn.QueryRow(ctx, sql, args...).Scan(&id)
	if err != nil {
		return err
	}
	record.`)
//line stores.qtpl:63
			qw422016.E().S(record.FieldAutoInc.GoName)
//line stores.qtpl:63
			qw422016.N().S(` = id
	return nil
`)
//line stores.qtpl:65
		}
//line stores.qtpl:65
		qw422016.N().S(`
}

`)
//line stores.qtpl:68
	}
//line stores.qtpl:69
}

//line stores.qtpl:69
func WriteStores(qq422016 qtio422016.Writer, input *StoresInput) {
//line stores.qtpl:69
	qw422016 := qt422016.AcquireWriter(qq422016)
//line stores.qtpl:69
	StreamStores(qw422016, input)
//line stores.qtpl:69
	qt422016.ReleaseWriter(qw422016)
//line stores.qtpl:69
}

//line stores.qtpl:69
func Stores(input *StoresInput) string {
//line stores.qtpl:69
	qb422016 := qt422016.AcquireByteBuffer()
//line stores.qtpl:69
	WriteStores(qb422016, input)
//line stores.qtpl:69
	qs422016 := string(qb422016.B)
//line stores.qtpl:69
	qt422016.ReleaseByteBuffer(qb422016)
//line stores.qtpl:69
	return qs422016
//line stores.qtpl:69
}
