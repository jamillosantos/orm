// Code generated by qtc from "schema.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line schema.qtpl:1
package templates

//line schema.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line schema.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line schema.qtpl:1
func StreamSchema(qw422016 *qt422016.Writer, input *SchemaInput) {
//line schema.qtpl:1
	qw422016.N().S(`
package `)
//line schema.qtpl:2
	qw422016.E().S(input.Package.Name)
//line schema.qtpl:2
	qw422016.N().S(`

import (
	"github.com/setare/orm"
)

`)
//line schema.qtpl:8
	for _, record := range input.Records {
//line schema.qtpl:8
		qw422016.N().S(`type `)
//line schema.qtpl:9
		qw422016.E().S(record.Schema.Type)
//line schema.qtpl:9
		qw422016.N().S(` struct {
`)
//line schema.qtpl:10
		for _, field := range record.Fields {
//line schema.qtpl:10
			qw422016.N().S(`	`)
//line schema.qtpl:11
			qw422016.E().S(field.GoName)
//line schema.qtpl:11
			qw422016.N().S(` orm.SchemaField
`)
//line schema.qtpl:12
		}
//line schema.qtpl:12
		qw422016.N().S(`}

var (
	`)
//line schema.qtpl:16
		qw422016.E().S(record.Schema.InternalRef)
//line schema.qtpl:16
		qw422016.N().S(`Fields = []SchemaField{
`)
//line schema.qtpl:17
		for _, field := range record.Fields {
//line schema.qtpl:17
			qw422016.N().S(`		orm.NewSchemaField("`)
//line schema.qtpl:18
			qw422016.E().S(field.Name)
//line schema.qtpl:18
			qw422016.N().S(`"),
`)
//line schema.qtpl:19
		}
//line schema.qtpl:19
		qw422016.N().S(`	}
	`)
//line schema.qtpl:21
		qw422016.E().S(record.Schema.InternalRef)
//line schema.qtpl:21
		qw422016.N().S(` = &`)
//line schema.qtpl:21
		qw422016.E().S(record.Schema.Type)
//line schema.qtpl:21
		qw422016.N().S(`{
		orm.NewSchema("`)
//line schema.qtpl:22
		qw422016.E().J(record.TableName)
//line schema.qtpl:22
		qw422016.N().S(`", `)
//line schema.qtpl:22
		qw422016.E().S(record.Schema.InternalRef)
//line schema.qtpl:22
		qw422016.N().S(`Fields),
`)
//line schema.qtpl:23
		for fieldIndex, field := range record.Fields {
//line schema.qtpl:23
			qw422016.N().S(`		`)
//line schema.qtpl:24
			qw422016.E().S(field.GoName)
//line schema.qtpl:24
			qw422016.N().S(`: `)
//line schema.qtpl:24
			qw422016.E().S(record.Schema.InternalRef)
//line schema.qtpl:24
			qw422016.N().S(`Fields[`)
//line schema.qtpl:24
			qw422016.N().D(fieldIndex)
//line schema.qtpl:24
			qw422016.N().S(`],
`)
//line schema.qtpl:25
		}
//line schema.qtpl:25
		qw422016.N().S(`	}
)
`)
//line schema.qtpl:28
	}
//line schema.qtpl:28
	qw422016.N().S(`

var Schema  = struct {
`)
//line schema.qtpl:31
	for _, record := range input.Records {
//line schema.qtpl:31
		qw422016.N().S(`	`)
//line schema.qtpl:32
		qw422016.E().S(record.Schema.Name)
//line schema.qtpl:32
		qw422016.N().S(` *`)
//line schema.qtpl:32
		qw422016.E().S(record.Schema.Type)
//line schema.qtpl:32
		qw422016.N().S(`
`)
//line schema.qtpl:33
	}
//line schema.qtpl:33
	qw422016.N().S(`}{
`)
//line schema.qtpl:35
	for _, record := range input.Records {
//line schema.qtpl:35
		qw422016.N().S(`	`)
//line schema.qtpl:36
		qw422016.E().S(record.Schema.Name)
//line schema.qtpl:36
		qw422016.N().S(`: `)
//line schema.qtpl:36
		qw422016.E().S(record.Schema.InternalRef)
//line schema.qtpl:36
		qw422016.N().S(`,
`)
//line schema.qtpl:37
	}
//line schema.qtpl:37
	qw422016.N().S(`}

`)
//line schema.qtpl:40
}

//line schema.qtpl:40
func WriteSchema(qq422016 qtio422016.Writer, input *SchemaInput) {
//line schema.qtpl:40
	qw422016 := qt422016.AcquireWriter(qq422016)
//line schema.qtpl:40
	StreamSchema(qw422016, input)
//line schema.qtpl:40
	qt422016.ReleaseWriter(qw422016)
//line schema.qtpl:40
}

//line schema.qtpl:40
func Schema(input *SchemaInput) string {
//line schema.qtpl:40
	qb422016 := qt422016.AcquireByteBuffer()
//line schema.qtpl:40
	WriteSchema(qb422016, input)
//line schema.qtpl:40
	qs422016 := string(qb422016.B)
//line schema.qtpl:40
	qt422016.ReleaseByteBuffer(qb422016)
//line schema.qtpl:40
	return qs422016
//line schema.qtpl:40
}
