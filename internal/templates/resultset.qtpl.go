// Code generated by qtc from "resultset.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line resultset.qtpl:1
package templates

//line resultset.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line resultset.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line resultset.qtpl:1
func StreamResultSet(qw422016 *qt422016.Writer, input *ResultSetInput) {
//line resultset.qtpl:1
	qw422016.N().S(`
package `)
//line resultset.qtpl:2
	qw422016.E().S(input.Package.Name)
//line resultset.qtpl:2
	qw422016.N().S(`

import (
	"database/sql"
	"github.com/setare/orm"
)

`)
//line resultset.qtpl:9
	for _, record := range input.Records {
//line resultset.qtpl:9
		qw422016.N().S(`type `)
//line resultset.qtpl:10
		qw422016.E().S(record.ResultSet.Type)
//line resultset.qtpl:10
		qw422016.N().S(` interface {
	To`)
//line resultset.qtpl:11
		qw422016.E().S(record.Name)
//line resultset.qtpl:11
		qw422016.N().S(`(*sql.Rows,`)
//line resultset.qtpl:11
		qw422016.E().S(record.Name)
//line resultset.qtpl:11
		qw422016.N().S(`) error
}

`)
//line resultset.qtpl:14
	}
//line resultset.qtpl:15
}

//line resultset.qtpl:15
func WriteResultSet(qq422016 qtio422016.Writer, input *ResultSetInput) {
//line resultset.qtpl:15
	qw422016 := qt422016.AcquireWriter(qq422016)
//line resultset.qtpl:15
	StreamResultSet(qw422016, input)
//line resultset.qtpl:15
	qt422016.ReleaseWriter(qw422016)
//line resultset.qtpl:15
}

//line resultset.qtpl:15
func ResultSet(input *ResultSetInput) string {
//line resultset.qtpl:15
	qb422016 := qt422016.AcquireByteBuffer()
//line resultset.qtpl:15
	WriteResultSet(qb422016, input)
//line resultset.qtpl:15
	qs422016 := string(qb422016.B)
//line resultset.qtpl:15
	qt422016.ReleaseByteBuffer(qb422016)
//line resultset.qtpl:15
	return qs422016
//line resultset.qtpl:15
}
