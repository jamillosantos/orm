{% func Schema(input *SchemaInput) %}
// Code generated by ormgen; DO NOT EDIT.

package {%s input.Package.Name %}

import (
	"github.com/jamillosantos/orm"
)

{% for _, record := range input.Records -%}
type {%s record.Schema.Type %} struct {
	orm.Schema
{% for _, field := range record.Fields -%}
	{%s field.GoName %} orm.SchemaField
{% endfor -%}
}

var (
	{%s record.Schema.InternalRef %}Fields = []orm.SchemaField{
{% for _, field := range record.Fields -%}
		orm.NewSchemaField("{%s field.Name %}"),
{% endfor -%}
	}
	{%s record.Schema.InternalRef %} = &{%s record.Schema.Type%}{
		Schema: orm.NewSchema("{%j record.TableName %}", {%s record.Schema.InternalRef %}Fields...),
{% for fieldIndex, field := range record.Fields -%}
		{%s field.GoName %}: {%s record.Schema.InternalRef %}Fields[{%d fieldIndex %}],
{% endfor -%}
	}
)
{% endfor %}

var Schema  = struct {
{% for _, record := range input.Records -%}
	{%s record.Schema.Name %} *{%s record.Schema.Type %}
{% endfor -%}
}{
{% for _, record := range input.Records -%}
	{%s record.Schema.Name %}: {%s record.Schema.InternalRef %},
{% endfor -%}
}

{% endfunc %}